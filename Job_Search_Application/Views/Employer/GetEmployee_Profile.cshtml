@model JobRequest_Model
@{
    ViewData["Title"] = "GetProfile";
}

<h2>@Model.Job.Title</h2>
<button class="btn btn-primary" onclick="goBack()">Back</button>


            <div class="card mb-4 border-light shadow" style="max-width: 900px">
                <div class="card-body border-bottom">
                    <div class="row">
                        <div class="col">
                            <img src="@Model.Employee.ProfileImage" alt="" class="rounded-circle float-start" style="height: 50px; width: 50px; margin-right: 10px; border: solid; border-color: paleturquoise; border-width: 0.9px" />
                <div class="d-flex justify-content-between align-items-center">
                    <div> <h5 class="card-title text-capitalize">@Model.Employee.First_name @Model.Employee.Last_name</h5>
                        <p class="card-text text-dark">@Model.Employee.User.Email, @Model.Employee.Address</p>


                   
                    </div>
                    @if (Model.Request_Status == "pending")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(204, 230, 255); min-width:150px; min-height:40px;  padding: 10px;">Status: Awaiting Review</div>

                    }
                    @if (Model.Request_Status == "accepted" && Model.InterviewRequest_Status == "pending")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(179, 255, 204); min-width:150px; min-height:40px;  padding: 10px;">Status: Accepted</div>

                    }
                    @if (Model.Request_Status == "rejected")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(255, 173, 153); min-width:150px; min-height:40px;  padding: 10px;">Status: Rejected</div>

                    }
                    @if (Model.InterviewRequest_Status == "declined")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(255, 173, 153); min-width:150px; min-height:40px;  padding: 10px;">Status: Withdrawn</div>

                    }
                    @if (Model.InterviewRequest_Status == "canceled")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(255, 173, 153); min-width:150px; min-height:40px;  padding: 10px;">Status: Declined</div>

                    }
                    @if (Model.InterviewRequest_Status == "interviewed")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(255, 255, 204); min-width:150px; min-height:40px;  padding: 10px;">Status: Interviewed</div>

                    }
                    @if (Model.InterviewRequest_Status == "hired")
                    {
                        <div class="rounded-1 justify-content-center align-middle" style="box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px; text-align:center; background-color:rgb(179, 255, 204); min-width:150px; min-height:40px;  padding: 10px;">Status: Hired</div>

                    }
                </div>

             


                <p class="card-text">@Model.Employee.Profession</p>
                <p class="card-text">@Model.Employee.birthDate.ToShortDateString()</p>
                <p class="card-text">@Model.Employee.Gender</p>


            </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                <p class="card-text"><h4>Personal Summary</h4> @Model.Employee.Personal_Summary</p>
                <a href="@Model.Employee.Resume" download="@Model.Employee.Resume">Preview CV</a>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @if (Model.Request_Status == "pending")
                    {
                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-danger js-reject-btn">Reject</button>
                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-success js-accept-btn">Accept</button>
                    }
                    @if (Model.Request_Status == "accepted" && Model.InterviewRequest_Status == "pending")
                    {
                        TempData["AcceptMessage"] = "This application has been accepted";
                        @if (TempData.ContainsKey("AcceptMessage"))
                        {
                            <div class="alert alert-success">@TempData["AcceptMessage"]</div>
                        }

                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-danger js-decline-btn">Decline</button>
                    }
                    @if (Model.InterviewRequest_Status == "accepted")
                    {
                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-info js-interviewed-btn">Mark as Interviewed</button>
                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-danger js-decline-btn">Decline</button>
                    }
                    @if (Model.InterviewRequest_Status == "interviewed" && Model.Request_Status == "accepted")
                    {
                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-info js-hire-btn">Hire</button>
                        <button data-request-id="@Model.JobRequest_Id" class="btn btn-danger js-reject-btn">Reject</button>
                    }
                    @if (Model.Request_Status == "rejected")
                    {
                        TempData["RejectMessage"] = "This application has been rejected";
                        @if (TempData.ContainsKey("RejectMessage"))
                        {
                            <div class="alert alert-danger">@TempData["RejectMessage"]</div>
                        }
                    }
                </div>
           
            </div>
          




@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.js"></script>
    <script>
        function goBack() {
            window.history.back();
        }
        $(document).ready(function () {
            $('.js-reject-btn').click(function (e) {
                debugger;
                var rejectButton = $(this);
                var acceptButton = rejectButton.siblings('.js-accept-btn');
                var requestId = rejectButton.data("request-id");

                bootbox.confirm({
                    message: "Are you sure you want to reject this job request?",
                    buttons: {
                        cancel: {
                            label: 'No',
                            className: 'btn-primary'
                        },
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Employer/RejectRequest/" + requestId,
                                method: "PUT"
                            })
                                .done(function () {
                                    bootbox.alert("You rejected the request successfully");
                                    rejectButton.hide(); // Hide the reject button
                                    acceptButton.hide(); // Hide the accept button
                                    $('.js-hire-btn').hide();
                                })
                                .fail(function () {
                                    bootbox.alert("Something went wrong!");
                                });
                        }
                    }
                });
            });

            $('.js-accept-btn').click(function (e) {
                debugger;
                var acceptButton = $(this);
                var rejectButton = acceptButton.siblings('.js-reject-btn');
                var requestId = acceptButton.data("request-id");

                bootbox.confirm({
                    message: "Are you sure you want to accept this request?",
                    buttons: {
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        },
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Employer/AcceptRequest/" + requestId,
                                method: "PUT"
                            })
                                .done(function () {
                                    bootbox.alert("You accepted the request successfully");
                                    acceptButton.hide(); // Hide the accept button
                                    rejectButton.hide(); // Hide the reject button
                                })
                                .fail(function () {
                                    bootbox.alert("Something went wrong!");
                                });
                        }
                    }
                });
            });
            $('.js-interviewed-btn').click(function (e) {
                var interviewedButton = $(this);
                var declineButton = $('.js-decline-btn');
                var requestId = interviewedButton.data("request-id");

                bootbox.confirm({
                    message: "Are you sure you want to mark this applicant as interviewed?",
                    buttons: {
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        },
                        confirm: {
                            label: 'Yes',
                            className: 'btn-info'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Employer/InterviewedApplicant/" + requestId,
                                method: "PUT"
                            })
                                .done(function () {
                                    bootbox.alert("You marked the applicant as interviewed successfully");
                                    interviewedButton.hide(); // Hide the interviewed button
                                    declineButton.hide(); // Hide the decline button
                                })
                                .fail(function () {
                                    bootbox.alert("Something went wrong!");
                                });
                        }
                    }
                });
            });

            $('.js-decline-btn').click(function (e) {
                var declineButton = $(this);
                var interviewedButton = $('.js-interviewed-btn');
                var requestId = declineButton.data("request-id");

                bootbox.confirm({
                    message: "Are you sure you want to decline this job request?",
                    buttons: {
                        cancel: {
                            label: 'No',
                            className: 'btn-primary'
                        },
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Employer/DeclineRequest/" + requestId,
                                method: "PUT"
                            })
                                .done(function () {
                                    bootbox.alert("You declined the request successfully");
                                    declineButton.hide(); // Hide the decline button
                                    interviewedButton.hide(); // Hide the interviewed button
                                })
                                .fail(function () {
                                    bootbox.alert("Something went wrong!");
                                });
                        }
                    }
                });
            });
        
            $('.js-hire-btn').click(function (e) {
                var hireButton = $(this);
                var requestId = hireButton.data("request-id");

                bootbox.confirm({
                    message: "Are you sure you want to hire this applicant?",
                    buttons: {
                        cancel: {
                            label: 'No',
                            className: 'btn-primary'
                        },
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Employer/Hire/" + requestId,
                                method: "PUT"
                            })
                                .done(function () {
                                    bootbox.alert("You hired the applicant successfully");
                                    hireButton.hide(); // Hide the hire button
                                    $('.js-reject-btn').hide(); // Hide the reject button
                                })
                                .fail(function () {
                                    bootbox.alert("Something went wrong!");
                                });
                        }
                    }
                });
            });

        });

       
    </script>

}
