@using System.Linq;
@using Job_Search_Application.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUsers> SignInManager
@inject UserManager<ApplicationUsers> UserManager
@model Job_Search_Application.Models.Jobs_Model;
@{
    ViewData["Title"] = "Published Job";
}


<div class="row d-flex justify-content-center">
    <div class="col-md-10 shadow" style="background-color: aliceblue; border-radius: 20px;">
        <br />
        <div class="card-header">
           
            <span class="userId" style="display:none;">@ViewBag.CurrentUser</span>
            <p style="display:none;">@Html.DisplayFor(modelItem => modelItem.PublisherId)</p>
            <h5>@Html.DisplayFor(modelItem => modelItem.Title)</h5>
            <h6 class="text-capitalize fw-bold">@Html.DisplayFor(modelItem => modelItem.Employer.Company_Name)</h6>
        </div>
        <div class="card-body">
            <p class="text-capitalize">@Html.DisplayFor(modelItem => modelItem.Job_Location)</p>
            <p class="text-capitalize d-inline">@Html.DisplayFor(modelItem => modelItem.Job_Schedule)</p>
            <p class="text-capitalize">@Html.DisplayFor(modelItem => modelItem.Job_Type)</p>
            <p class="text-capitalize">@Html.DisplayFor(modelItem => modelItem.Classification)</p>
            <p class="text-capitalize">@Html.DisplayFor(modelItem => modelItem.Salary)</p>
        </div>

        <div class="card-footer">
            <p>@Html.DisplayFor(modelItem => modelItem.Job_Details)</p>
        </div>
        <br />

        @if (((IEnumerable<string>)ViewBag.ApplyedJobs).Contains(Model.Jobs_Id))
        {
            var jobRequestStatus = (Dictionary<string, string>)ViewBag.RequestStatus;
            var requestStatus = jobRequestStatus.ContainsKey(Model.Jobs_Id) ? jobRequestStatus[Model.Jobs_Id] : null;

            if (requestStatus == "pending")
            {
                  <button data-job-id="@Model.Jobs_Id" class="btn btn-primary disabled apply-btn js-apply-request">
                    Applied
                </button>

                <button data-job-id="@Model.Jobs_Id" class="btn btn-danger js-withdraw-request">
                    Withdraw
                </button>



            }
            else if (requestStatus == "withdrawn")
            {
                TempData["WithdrawnMessage"] = "You have withdrawn the application.";
                @if (TempData.ContainsKey("WithdrawnMessage"))
                {
                    <div class="alert alert-danger">@TempData["WithdrawnMessage"]</div>
                }
            }

        }
        else if (SignInManager.IsSignedIn(User))
        {
            var user = await UserManager.GetUserAsync(User);
            var roles = await UserManager.GetRolesAsync(user);
            if (roles.Contains("Employer") || roles.Contains("Admin") )
            {
                <button disabled class="btn btn-primary apply-btn" style="display:none">
                    Apply Now
                </button>
            }
            else
            {
                <button data-job-id="@Model.Jobs_Id" class="btn btn-primary apply-btn js-apply-request">
                    Apply Now
                </button>
                <button id="saveButton" class="btn btn-primary" onclick="saveJob('@Model.Jobs_Id')" style="display: none">Save Job</button>
                <button id="unsaveButton" class="btn btn-primary" onclick="unsaveJob('@Model.Jobs_Id')" style="display: none">Unsave Job</button>
            }
        }
        else
        {
            <button onclick="redirectToLogin()" class="btn btn-primary apply-btn">
                Apply Now
            </button>
        }
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.js"></script>
   

 
    <script>
        function redirectToLogin() {
            window.location.href = "/Identity/Account/Login";
        }
        $(document).ready(function () {
            $(".js-apply-request").click(function (e) {
                bootbox.confirm({
                    message: "Are you sure you want to apply to this job?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Employee/ApplyForJob/" + $(e.target).data("job-id"),
                                method: "POST",
                            })
                                .done(function () {
                                    bootbox.alert("You applied successfully");
                                    $(e.target).show().addClass("btn-primary disabled").text("Applied");
                                })
                                .fail(function (jqXHR, textStatus, errorThrown) {
                                    bootbox.alert("An error occurred: " + errorThrown);
                                });
                        }
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $(".js-withdraw-request").click(function (e) {
                var withdrawButton = $(this);

                bootbox.confirm({
                    message: "Are you sure you want to withdraw your application?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            var jobId = withdrawButton.data("job-id");

                            $.ajax({
                                url: "/api/Employee/WithdrawApplication/" + jobId,
                                method: "POST",
                            })
                                .done(function () {
                                    withdrawButton.hide();
                                    bootbox.alert("You have withdrawn your application successfully");
                                })
                                .fail(function (jqXHR, textStatus, errorThrown) {
                                    bootbox.alert("An error occurred: " + errorThrown);
                                });
                        }
                    }
                });
            });
        });
    </script>
  
       <script>
        $(document).ready(function () {
            var jobId = '@Model.Jobs_Id';

            // Check if the job is already saved
            $.ajax({
                url: '/Employee/CheckSavedJob',
                type: 'POST',
                data: { jobId: jobId },
                success: function (response) {
                    if (response === true) {
                        // Job is saved, hide the save button and show the unsave button
                        $('#saveButton').hide();
                        $('#unsaveButton').show();
                    } else {
                        // Job is not saved, show the save button and hide the unsave button
                        $('#saveButton').show();
                        $('#unsaveButton').hide();
                    }
                },
                error: function () {
                    // Handle the error response, e.g., show an error message
                    alert('An error occurred while checking if the job is saved.');
                }
            });
        });

        function saveJob(jobId) {
            // Send an AJAX request to save the job
            $.ajax({
                url: '/Employee/SaveJob',
                type: 'POST',
                data: { jobId: jobId },
                success: function () {
                    // Handle the success response, e.g., show a success message

                    // Hide the save button and show the unsave button
                    $('#saveButton').hide();
                    $('#unsaveButton').show();
                },
                error: function () {
                    // Handle the error response, e.g., show an error message
                    alert('An error occurred while saving the job.');
                }
            });
        }

        function unsaveJob(jobId) {
            // Send an AJAX request to unsave the job
            $.ajax({
                url: '/Employee/UnsaveJob',
                type: 'POST',
                data: { jobId: jobId },
                success: function () {
                    // Handle the success response, e.g., show a success message

                    // Hide the unsave button and show the save button
                    $('#unsaveButton').hide();
                    $('#saveButton').show();
                },
                error: function () {
                    // Handle the error response, e.g., show an error message
                    alert('An error occurred while unsaving the job.');
                }
            });
        }
    </script>
    
}